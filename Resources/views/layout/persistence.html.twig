{% extends '@LeonBsw/layout/blank.html.twig' %}
{% set tpl_content_class = ['bsw-page-container', tpl_content_class_diy ?? null]|filter(v => v)|join(' ') %}

{% block page %}
  <div class="bsw-persistence">
    <a-form
      id="persistence_form"
      :form="persistence_form"
      @submit="persistence_submit"
    >
      {% set total_column = constant(scaffold.abs ~ "::PERSISTENCE_TOTAL_COLUMN") %}
      {% set label_column = constant(scaffold.abs ~ "::PERSISTENCE_LABEL_COLUMN") %}

      {% for field, item in persistence.record %}
        {% set form = item.type %}
        {% set wrapper_column = item.column ?: (total_column - label_column) %}
        {% set autoTips = null %}
        {% if form.itemName == 'select' and form.mode == 'multiple' %}
          {% set autoTips = ',' ~ ('For multiple newly'|trans({}, 'twig')) %}
        {% endif %}
        <a-form-item
          v-show="{{ item.hide ? 'false' : 'true' }}"
          :label-col="{md: { span: {{ total_column }} }, lg: { span: {{ label_column }} }}"
          :wrapper-col="{md: { span: {{ total_column }} }, lg: { span: {{ wrapper_column }} }}"
          label="{{ item.label|trans({}, 'twig') }}"
          extra="{{ ((item.tips|trans({}, 'twig')) ~ autoTips)|trim(',') }}"
        >
          {% set begin = item.title ? '<a-tooltip placement="topLeft" title="' ~ item.title ~'">' : null %}
          {% set end = item.title ? '</a-tooltip>' : null %}
          {{ begin }}
          {% include '@LeonBsw/form/' ~ form.itemName ~ '.html.twig' %}
          {{ end }}
        </a-form-item>
      {% endfor %}

      <a-form-item
        :wrapper-col="{
          sm: { span: {{ total_column }}, offset: 0 },
          md: { span: {{ total_column - label_column }}, offset: {{ label_column }} }
        }"
      >
        {% for form in persistence.operates %}
          {% include '@LeonBsw/form/button.html.twig' %}
        {% endfor %}
      </a-form-item>
    </a-form>
  </div>
{% endblock %}

{% block javascript %}
bsw.configure({
    data: {
        persistence_form: null,
        persistence_format: {{ persistence.formatJson|raw }},
        persistence_file_md5: null,
        persistence_file_sha1: null,
        persistence_file_list: null,
        {% for key, value in persistence.dataKeys %}
        {{ key }}: {{ value }},
        {% endfor %}
    },
    method: {
        persistence_submit(e) {
            this.persistence(e);
        }
    },
    logic: {
        persistence_init(v) {
            v.persistence_form = v.$form.createForm(v);
            v.$nextTick(function () {
                bsw.cnf.v.initCkEditor();
            });
        }
    }
});
{% endblock %}